version: '3'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql3306
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Admin@777 #设置root帐号密码
    ports:
      - 3306:3306
    volumes:
      - ~/mydata/mysql/data/db:/var/lib/mysql #数据文件挂载
      - ~/mydata/mysql/data/conf:/etc/mysql/conf.d #配置文件挂载
      - ~/mydata/mysql/log:/var/log/mysql #日志文件挂载
  # redis:
  #   image: redis:5
  #   container_name: redis6379
  #   command: redis-server /etc/redis/redis.conf
  #   volumes:
  #     - ~/mydata/redis/data:/data # 数据文件挂载
  #     - ~/mydata/redis/redis.conf:/etc/redis/redis.conf # redis.conf配置，启动前上传文件到指定目录下, 通过 requirepass 属性设置密码
  #   ports:
  #     - 6379:6379
  # nginx:
  #   image: nginx:1.22.0
  #   container_name: nginx80
  #   volumes:
  #     - ~/mydata/nginx/nginx.conf:/etc/nginx/nginx.conf #配置文件挂载，启动前上传文件到指定目录下
  #     - ~/mydata/nginx/html:/usr/share/nginx/html #静态资源根目录挂载
  #     - ~/mydata/nginx/log:/var/log/nginx #日志文件挂载
  #   ports:
  #     - 80:80
  # minio:
  #   image: minio/minio
  #   container_name: minio9000_9001
  #   hostname: 'minio' # 主机名称，可以在其他容器通过该名称访问到
  #   privileged: true # 使用该参数，container内的root拥有真正的root权限。
  #   command: server --console-address ':9001' /data #指定容器中的目录 /data
  #   restart: always
  #   ports:
  #     - 9000:9000 # api 端口
  #     - 9001:9001 # 控制台端口
  #   environment:
  #     MINIO_ROOT_USER: FXw232xjsgewE31qH #管理后台用户名
  #     MINIO_ROOT_PASSWORD: LsiDz1yngsEFsTqb51R #管理后台密码，最小8个字符
  #   volumes:
  #     - ~/mydata/minio/data:/data #映射当前目录下的data目录至容器内/data目录
  #     - ~/mydata/minio/config:/root/.minio/ #映射配置目录
  # nacos-registry:
  #   image: nacos/nacos-server:1.4.2
  #   container_name: nacos-registry
  #   restart: always
  #   environment:
  #     - 'MODE=standalone'
  #   volumes:
  #     - ~/mydata/nacos/logs/:/home/nacos/logs
  #   ports:
  #     - 8848:8848
#  mongo:
#    image: mongo:4.2.5
#    container_name: mongo
#    volumes:
#      - /mydata/mongo/db:/data/db # 数据文件挂载
#    ports:
#      - 27017:27017

# 这些暂时不需要 search相关、日志收集、消息队列
#  rabbitmq:
#    image: rabbitmq:3.7.15-management
#    container_name: rabbitmq
#    volumes:
#      - /mydata/rabbitmq/data:/var/lib/rabbitmq #数据文件挂载
#      - /mydata/rabbitmq/log:/var/log/rabbitmq #日志文件挂载
#    ports:
#      - 5672:5672
#      - 15672:15672
#  elasticsearch:
#    image: elasticsearch:7.6.2
#    container_name: elasticsearch
#    user: root
#    environment:
#      - "cluster.name=elasticsearch" #设置集群名称为elasticsearch
#      - "discovery.type=single-node" #以单一节点模式启动
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" #设置使用jvm内存大小
#    volumes:
#      - /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载
#      - /mydata/elasticsearch/data:/usr/share/elasticsearch/data #数据文件挂载
#    ports:
#      - 9200:9200
#      - 9300:9300
#  logstash:
#      image: logstash:7.6.2
#      container_name: logstash
#      environment:
#        - TZ=Asia/Shanghai
#      volumes:
#        - /mydata/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf #挂载logstash的配置文件
#      depends_on:
#        - elasticsearch #logstash在elasticsearch启动之后再启动
#      links:
#        - elasticsearch:es #可以用es这个域名访问elasticsearch服务
#      ports:
#        - 4560:4560
#        - 4561:4561
#        - 4562:4562
#        - 4563:4563
#  kibana:
#    image: kibana:7.6.2
#    container_name: kibana
#    links:
#      - elasticsearch:es #可以用es这个域名访问elasticsearch服务
#    depends_on:
#      - elasticsearch #kibana在elasticsearch启动之后再启动
#    environment:
#      - "elasticsearch.hosts=http://es:9200" #设置访问elasticsearch的地址
#    ports:
#      - 5601:5601
